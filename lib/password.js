// Generated by CoffeeScript 1.10.0
(function() {
  var Crypto, Password, Promise, bcrypt, zxcvbn;

  bcrypt = require('bcrypt');

  Promise = require('bluebird');

  Crypto = require('./crypto');

  zxcvbn = require('zxcvbn');

  Password = (function() {
    function Password() {}

    Password.iteration = 12;

    Password.hash = function(password, cb) {
      return bcrypt.hash(password, this.iteration, function(err, res) {
        if (err) {
          return cb(err);
        } else {
          return cb(null, res);
        }
      });
    };

    Password.compare = function(password, hash, cb) {
      return bcrypt.compare(password, hash, cb);
    };

    Password.genMasterKey = function(type, password, hash, cb) {
      return this.compare(password, hash, function(err, res) {
        if (err) {
          return cb(err);
        } else {
          return Crypto.createKey(type, password, hash, cb);
        }
      });
    };

    Password.entropy = function(password) {
      return zxcvbn(password);
    };

    return Password;

  })();

  Promise.promisifyAll(Password.prototype);

  Promise.promisifyAll(Password);

  module.exports = Password;

}).call(this);
